<?php
// $Id$

/**
 * @file
 * Install, update and uninstall functions for the rvk_ticketing module
 *
 * Download the schema module to auto-generate a schema array for a table:
 * http://drupal.org/project/schema.
 *
 * In this file, we grab the output from the schema 'info' page, paste it
 * in here and update the descriptions.
 */

/**
 * Implements hook_install().
 */
function rvk_ticketing_install() {
  /*_rvk_ticketing_create_indication_type_taxonomy_vocabulary();
  _rvk_ticketing_create_indication_status_taxonomy_vocabulary();
  _rvk_ticketing_create_indication_content_type();*/
}

/**
 * Implements hook_enable().
 */
function rvk_ticketing_enable() {
  _rvk_ticketing_create_indication_type_taxonomy_vocabulary();
  _rvk_ticketing_create_indication_status_taxonomy_vocabulary();
  _rvk_ticketing_create_external_department_taxonomy_vocabulary();
  _rvk_ticketing_create_indication_content_type();
}

/**
 * Implements hook_disable().
 */
function rvk_ticketing_disable() {
  $view = views_get_view('indications');
  if($view) {
    views_delete_view($view);
  }

  $types = taxonomy_vocabulary_machine_name_load('indication_types');
  $status = taxonomy_vocabulary_machine_name_load('indication_status');
  $external_departments = taxonomy_vocabulary_machine_name_load('external_departments');
  taxonomy_vocabulary_delete($types->vid);
  taxonomy_vocabulary_delete($status->vid);
  taxonomy_vocabulary_delete($external_departments->vid);

  _rvk_ticketing_remove_content_type(['indications']);

  variable_del('comment_indication');
  variable_del('comment_preview_indications');
  variable_del('comment_subject_field_indications');
  variable_del('node_options_indications');
}

/**
 * Implements hook_uninstall().
 */
function rvk_ticketing_uninstall() {

}

function _rvk_ticketing_create_indication_type_taxonomy_vocabulary() {
  if($tax = taxonomy_vocabulary_machine_name_load('indication_types')) {
    return;
  }

  $weight = 1;
  $vocabulary = new stdClass();
  $vocabulary->name = 'Ábendingategundir';
  $vocabulary->machine_name = 'indication_types';
  $vocabulary->description = "Ábendingar til rafrænnar Reykjavíkur um úrbætur";
  $vocabulary->module = 'taxonomy';

  taxonomy_vocabulary_save($vocabulary);

  _rvk_ticketing_add_fields_to_bundle('field_indication_response_time', 'text', 'indication_types',
    'Tími frá fyrsta svari þangað til loka þarf ábendingu', 'Þarf að svara fyrir (dagar):', 'textfield', 'taxonomy_term');

  _rvk_ticketing_add_fields_to_bundle('field_send_mail_f_new_indication', 'list_boolean', 'indication_types',
    'Senda tölvupóst á alla á sviði í hvert skipti sem ábendingu er úthlutað á svið', 'Senda tölvupóst á svið.', 'options_onoff', 'taxonomy_term',
    [0 => 'Nei', 1 => 'Já']);

  $departments = _rvk_ticketing_get_departments_and_categories();

  foreach($departments as $department) {
    $category_weight = $weight * 10;

    $term = new stdClass();
    $term->name = $department['name'];
    $term->vid = $vocabulary->vid;
    $term->weight = $weight++;
    $term->field_indication_response_time[LANGUAGE_NONE][0]['value'] = 2;
    taxonomy_term_save($term);

    if(sizeof($department['categories']) > 0) {
      foreach($department['categories'] as $category) {
        $sub_category_weight = $category_weight * 10;
        $cat = new stdClass();
        $cat->name = $category['category'];
        $cat->vid = $vocabulary->vid;
        $cat->weight = $category_weight++;
        $cat->parent = $term->tid;
        $cat->field_indication_response_time[LANGUAGE_NONE][0]['value'] = 2;
        taxonomy_term_save($cat);

        if(isset($category['sub_categories'])) {
          foreach($category['sub_categories'] as $sub_category) {
            $sub_term = new stdClass();
            $sub_term->name = $sub_category;
            $sub_term->vid = $vocabulary->vid;
            $sub_term->parent = $cat->tid;
            $sub_term->weight = $sub_category_weight++;
            $sub_term->field_indication_response_time[LANGUAGE_NONE][0]['value'] = 2;
            taxonomy_term_save($sub_term);
          }
        }
      }
    }
  }
}

function _rvk_ticketing_create_indication_status_taxonomy_vocabulary() {
  if($tax = taxonomy_vocabulary_machine_name_load('indication_status')) {
    return;
  }

  $vocabulary = new stdClass();
  $vocabulary->name = 'Staða ábendingar';
  $vocabulary->machine_name = 'indication_status';
  $vocabulary->description = 'Staða ábendingar í kerfinu';
  $vocabulary->module = 'taxonomy';

  taxonomy_vocabulary_save($vocabulary);

  $status = [
    'Ný ábending',
    'Móttekin',
    'Í úrvinnslu',
    'Lokið',
  ];

  $weight = 1;
  foreach($status as $s) {
    $term = new stdClass();
    $term->name = $s;
    $term->vid = $vocabulary->vid;
    $term->weight = $weight++;
    taxonomy_term_save($term);
  }
}

function _rvk_ticketing_create_external_department_taxonomy_vocabulary() {
  if($tax = taxonomy_vocabulary_machine_name_load('external_departments')) {
    return;
  }

  $vocabulary = new stdClass();
  $vocabulary->name = "Utanaðkomandi deildir og svið";
  $vocabulary->machine_name = "external_departments";
  $vocabulary->description = "Utanaðkomandi deildir og svið";
  $vocabulary->module = "taxonomy";

  taxonomy_vocabulary_save($vocabulary);

  _rvk_ticketing_add_fields_to_bundle('field_ed_email', 'text', 'external_departments',
    'Email', 'Tölvupóstfang sem áframsenda skal mál á.', 'textfield', 'taxonomy_term');

  $departments = [
    'Faxaflóahafnir',
    'Strætó',
    'Orka Náttúrunnar',
  ];

  $weight = 1;
  foreach($departments as $department) {
    $term = new stdClass();
    $term->name = $department;
    $term->vid = $vocabulary->vid;
    $term->weight = $weight++;
    taxonomy_term_save($term);
  }
}

/**
 * Created a function for this code, since I have to use it multiple times.
 *
 * It took a long time to find the correct place to run the allowed values code,
 * since that setting is not within the instance, but within the field creation
 * itself.
 *
 * @param $field_machine_name
 * @param $field_type
 * @param $bundle
 * @param $field_description
 * @param $field_label
 * @param $widget
 * @param string $entity_type
 * @param null|array $allowed_values
 * @throws \Exception
 * @throws \FieldException
 */
function _rvk_ticketing_add_fields_to_bundle(
  $field_machine_name, $field_type, $bundle, $field_description, $field_label,
  $widget, $entity_type = 'node', $allowed_values = null, $required = false
){
  //  The machine name of the field can contain only lowercase alphanumeric characters and underscores.
  $field_name = $field_machine_name;

  //  Verify the field does not already exist.
  if ( !field_info_field( $field_name ) ) {
    //  Create the field definition array.
    $field = array(
      'field_name' => $field_name,
      'type' => $field_type,
    );

    if($allowed_values){
      $field['settings'] = $allowed_values;
    }
    //  Create the field.
    $field = field_create_field( $field );
  }
  else{
    $field = field_info_field($field_name);
  }

  //  Create the field instance definition array.
  $instance = array(
    'field_name' => $field[ 'field_name' ],
    'entity_type' => $entity_type,
    'bundle' => $bundle,
    'description' => $field_description,
    'label' => $field_label,
    'widget' => array(
      'type' => $widget,
    ),
    'required' => $required,
  );

//  Create an instance of the field and bind it to the bundle.
  try{
    field_create_instance($instance);
  }
  catch(exception $e) {

  }
}

function _rvk_ticketing_create_indication_content_type() {
  //CODE FROM THE DRUPAL WATCHDOG:  https://www.drupalwatchdog.com/volume-3/issue-2/drupal-7-content-types-code
  //  The machine name of the content type can contain only lowercase alphanumeric
  //  characters and underscores.
  $type_name = 'indications';

  //  Verify the content type does not already exist. To instead get the node types
  //  as objects, use node_type_get_types().
  if ( in_array( $type_name, node_type_get_names() ) ) {
    return;
  }

  //  Create the type definition array.
  $type = array(
    'type' => $type_name,
    'name' => t( 'Ábendingar' ),
    'base' => 'node_content',
    'description' => t( 'Geymir upplýsingar um ábendingar frá íbúm til þjónustuvers' ),
    'custom' => 1,
    'modified' => 1,
    'locked' => 0,
  );
  $type = node_type_set_defaults( $type );
  node_type_save( $type );

  _rvk_ticketing_add_fields_to_bundle('field_indication_text', 'text_long', $type_name,
    'Ábending frá íbúa', 'Ábending', 'text_textarea');
  _rvk_ticketing_add_fields_to_bundle('field_interpered_indication_text', 'text_long', $type_name,
    'Túlkuð ábending frá íbúa, eftir að þjónustufulltrúi hefur farið yfir hana',
    'Túlkuð ábending', 'text_textarea');
  _rvk_ticketing_add_fields_to_bundle('field_image', 'image', $type_name, 'Mynd með tilkynningu',
    'Mynd með tilkynningu', 'image_image');
  _rvk_ticketing_add_fields_to_bundle('field_indication_reporter_name', 'text',
    $type_name, 'Nafn sendanda', 'Nafn sendanda', 'textfield');
  _rvk_ticketing_add_fields_to_bundle('field_indication_reporter_ssn', 'text',
    $type_name, 'Kennitala sendanda', 'Kennitala sendanda', 'textfield');
  _rvk_ticketing_add_fields_to_bundle('field_indication_reporter_email', 'text',
    $type_name, 'Netfang', 'Netfang', 'textfield');
  _rvk_ticketing_add_fields_to_bundle('field_indication_reporter_phone', 'text',
    $type_name, 'Símanúmer', 'Símanúmer', 'textfield');
  _rvk_ticketing_add_fields_to_bundle('field_indication_status_ref', 'taxonomy_term_reference',
    $type_name, 'Staða ábendingar', 'Staða', 'autocomplete', 'node',
    ['allowed_values' => [0 => ['vocabulary' => 'indication_status', 'parent' => 0]],
      'options_list_callback' => 'i18n_taxonomy_allowed_values'], TRUE);
  _rvk_ticketing_add_fields_to_bundle('field_indication_type_ref', 'taxonomy_term_reference',
    $type_name, 'Ábendingategund', 'Ábendingategund', 'hierarchical_select', 'node',
    ['allowed_values' => [0 => ['vocabulary' => 'indication_types', 'parent' => 0]],
      'options_list_callback' => 'i18n_taxonomy_allowed_values']);
  _rvk_ticketing_add_fields_to_bundle('field_forward_to_external_dp', 'taxonomy_term_reference',
    $type_name, 'Áframsenda á utanaðkomandi', 'Áframsenda á utanaðkomandi', 'autocomplete', 'node',
    ['allowed_values' => [0 => ['vocabulary' => 'external_departments', 'parent' => 0]],
      'options_list_callback' => 'i18n_taxonomy_allowed_values']);
  _rvk_ticketing_add_fields_to_bundle('field_indication_int_comm', 'text_long', $type_name,
    'Innri málsmeðferð', 'Innri málsmeðferð', 'text_textarea', 'node');
  _rvk_ticketing_add_fields_to_bundle('field_indication_response', 'text_long', $type_name,
    'Svar þjónustuvers við ábendingunni', 'Svar', 'text_textarea', 'node');
  _rvk_ticketing_add_fields_to_bundle('field_indication_location', 'text', $type_name,
    'Staðsetning (götunafn í nefnifalli)', 'Staðsetning', 'textfield');
  _rvk_ticketing_add_fields_to_bundle('field_indication_position_x', 'text', $type_name,
    'XHnit frá Borgarvefsjá', 'XHnit', 'textfield');
  _rvk_ticketing_add_fields_to_bundle('field_indication_position_y', 'text', $type_name,
    'YHnit frá Borgarvefsjá', 'YHnit', 'textfield');
  _rvk_ticketing_add_fields_to_bundle('field_indication_respond_by', 'date', $type_name,
    'The date and time of when the indication should be answered', 'Svara ábendingu fyrir',
    'textfield');
  _rvk_ticketing_add_fields_to_bundle('field_indication_responded_at', 'date', $type_name,
    'The date and time of when the indication was answered', 'Ábendingunni svarað þann',
    'textfield');
  _rvk_ticketing_add_fields_to_bundle('field_indication_close_by', 'date', $type_name,
    'The date and time of when the indication should be closed', 'Ábendingunni þarf að loka fyrir',
    'textfield');
    _rvk_ticketing_add_fields_to_bundle('field_indication_closed_at', 'date', $type_name,
        'The date and time of when the indication was closed', 'Ábendingunni lokað þann',
        'textfield');

  //Set preview to none and disable the subject line for comments
  variable_set('comment_indication', '1');
  variable_set('comment_preview_indications', 0);
  variable_set('comment_subject_field_indications', 0);
  variable_set('node_options_indications', array('status'));
}

/**
 * Helper function to remove content type, upon uninstall
 *
 * @param array $type_name
 */
function _rvk_ticketing_remove_content_type(array $type_name){
  foreach($type_name as $type){
    if (in_array($type, array_keys(node_type_get_names()))) {
      $query = new EntityFieldQuery;
      $results = $query
        ->entityCondition('entity_type', 'node')
        ->propertyCondition('type', $type_name)
        ->propertyCondition('status', 1, '=')
        ->execute();

      if($results) {
        $results = array_values($results['node']);

        foreach($results as $result) {
          node_delete($result->nid);
        }
      }

      node_type_delete($type);
      variable_del('node_preview_' . $type);
    }
  }
}

function _rvk_ticketing_get_departments_and_categories() {
  $departments = [
    [
      'name' => 'Umhverfis- og skipulagssvið',
      'categories' =>
        [
          [
            'category' => 'Götur og gangstéttar',
            'sub_categories' => [
              'Malbik',
              'Hellur',
              'Steypa',
              'Kantsteinar',
              'Hleðslur/veggir',
              'Tröppur/rampar',
              'Skilti',
              'Pollar',
              'Annað',
            ],
          ],
          [
            'category' => 'Gróður og götugögn',
            'sub_categories' => [
              'Grassvæði',
              'Trjábeð/blómabeð',
              'Götutré',
              'Gróðurker/körfur',
              'Ruslafötur',
              'Bekkir/borð',
              'Styttur/listaverk',
              'Leiktæki/æfingatæki',
              'Annað',
            ],
          ],
          [
            'category' => 'Lagnir og lýsing',
            'sub_categories' => [
              'Ljósastaurar',
              'Lýsing',
              'Rafmagnskassar',
              'Niðurföll/ristar',
              'Drykkjafontar',
              'Annað',
            ],
          ],
          [
            'category' => 'Umferð',
            'sub_categories' => [
              'Umferðarljós',
              'Umferðarskilti',
              'Gatnamerkingar',
              'Hlið',
              'Girðingar/vegrið',
              'Strætóskýli',
              'Annað',
            ],
          ],
          [
            'category' => 'Vetrarþjónusta',
            'sub_categories' => [
              'Götur',
              'Göngu- og hjólaleiðir',
              'Hitakerfi',
              'Stofnanalóðir',
              'Annað',
            ],
          ],
          [
            'category' => 'Grassláttur',
            'sub_categories' => [
              'Grunn- og leikskólar',
              'Önnur svæði',
            ],
          ],
          [
            'category' => 'Hreinsun',
            'sub_categories' => [
              'Götur',
              'Göngu- og hjólaleiðir',
              'Miðborgarhreinsun',
              'Veggjakrot',
              'Annað',
            ],
          ],
        ],
    ],
    [
      'name' => 'Skóla- og frístundasvið',
      'categories' =>
        [
          [
            'category' => 'Mötuneyti',
          ],
        ],
    ],
    [
      'name' => 'Velferðarsvið',
      'categories' => [

      ],
    ],
    [
      'name' => 'Íþrótta- og tómstundasvið',
      'categories' =>
        [

        ],
    ],
    [
      'name' => 'Menningar- og ferðamálasvið',
      'categories' =>
        [

        ],
    ],
    [
      'name' => 'Skrifstofur Ráðhúss',
      'categories' =>
        [

        ],
    ],
    [
      'name' => 'Stofnanir og fyrirtæki',
      'categories' =>
        [

        ],
    ],
    [
      'name' => 'Þjónustuver',
      'categories' =>
        [

        ],
    ],
  ];

  return $departments;
}